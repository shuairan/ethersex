#! /bin/sh

[ -e config.in ] || {
  echo "$0: This script has to be run from the Ethersex root directory."
  exit 1
}

if [ x"$1" != x"-n" ]; then 
  git pull --quiet origin  >/dev/null  || exit 2
else
  shift
fi

if [ x"$1" != x"" ]; then
  while [ -n "$1" ]; do

    if [ -e "contrib/autotest/profiles/$1" ]; then
      profile="contrib/autotest/profiles/$1"
    fi
    if [ -e "scripts/profiles/$1" ]; then
      profile="scripts/profiles/$1"
    fi
    if [ -z "$profile" ]; then
      echo "Profile $1 not found"
      shift;
      continue;
    fi

    echo "Trying to compile Ethersex firmware using profile '$profile' ..."
    ./contrib/autotest/run "$profile" >/dev/null
    [ -e "ethersex.bin" ] && ls -l ethersex.bin
    echo ""

    shift;

  done

else
  GIT_VER=`git show --abbrev-commit --pretty=oneline | sed -n '1 {s/ .*//p}' | tr -d '\n'`
  SUCCESSFULL=0
  echo "$0 at `date` using ethersex revision: $GIT_VER" >> batch-local-test.log
  for A in contrib/autotest/profiles/* scripts/profiles/*; do
    echo ".Trying to compile Ethersex firmware using profile '$A' ..."
    rm -rf "ethersex.bin"
    RET="FAIL"
    ./contrib/autotest/run "$A" > /dev/null
    if [ -e "ethersex.bin" ] ; then 
      ls -l ethersex.bin
      RET="success with $(stat -c%s 'ethersex.bin') bytes"
      let SUCCESSFULL=$SUCCESSFULL+1
    fi
    echo "Compile of $A: $RET" >> batch-local-test.log
    echo ""
  done
  echo "Successfull ${SUCCESSFULL} / `ls contrib/autotest/profiles/* scripts/profiles/* | wc -l` " >> batch-local-test.log
  echo "" >> batch-local-test.log
  echo "Successfull ${SUCCESSFULL} / `ls contrib/autotest/profiles/* scripts/profiles/* | wc -l` " 
  echo "see full result in batch-local-test.log"
fi
